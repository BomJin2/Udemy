{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bomjin\\\\Desktop\\\\ureact\\\\22-Auth\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams();\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw new Response({\n      message: \"잘못된 요청임\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    eamil: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (!response.ok) {\n    throw new Error();\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","Response","message","status","data","formData","authData","eamil","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","$RefreshReg$"],"sources":["C:/Users/Bomjin/Desktop/ureact/22-Auth/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from \"../components/AuthForm\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams();\n  const mode = searchParams.get(\"mode\") || \"login\";\n\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw new Response({ message: \"잘못된 요청임\" }, { status: 422 });\n  }\n\n  const data = await request.formData();\n  const authData = {\n    eamil: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n  const response = fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(authData),\n  });\n\n  if (!response.ok) {\n    throw new Error();\n  }\n}\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY,CAAC,CAAC;EACxD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAM,IAAIE,QAAQ,CAAC;MAAEC,OAAO,EAAE;IAAU,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC7D;EAEA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACJ,GAAG,CAAC,OAAO,CAAC;IACxBQ,QAAQ,EAAEJ,IAAI,CAACJ,GAAG,CAAC,UAAU;EAC/B,CAAC;EACD,MAAMS,QAAQ,GAAGC,KAAK,CAAC,wBAAwB,GAAGX,IAAI,EAAE;IACtDY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,CAAC;EACnB;AACF;AAAC,IAAAxB,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}