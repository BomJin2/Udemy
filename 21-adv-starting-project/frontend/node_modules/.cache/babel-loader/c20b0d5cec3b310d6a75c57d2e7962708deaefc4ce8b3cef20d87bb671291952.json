{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bomjin\\\\Desktop\\\\ureact\\\\21-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  console.log(id);\n  const reponse = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!reponse.ok) {\n    throw new Error({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return reponse;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","events","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","console","log","reponse","fetch","ok","Error","message","status","$RefreshReg$"],"sources":["C:/Users/Bomjin/Desktop/ureact/21-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const data = useLoaderData();\r\n\r\n  const events = data.events;\r\n\r\n  return <EventItem event={events} />;\r\n}\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.id;\r\n\r\n  console.log(id);\r\n\r\n  const reponse = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!reponse.ok) {\r\n    throw new Error({ message: \"Could not fetch details for selected event.\" }, { status: 500 });\r\n  } else {\r\n    return reponse;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBAAOJ,OAAA,CAACF,SAAS;IAACO,KAAK,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrC;AAACP,EAAA,CANQD,eAAe;EAAA,QACTJ,aAAa;AAAA;AAAAa,EAAA,GADnBT,eAAe;AAOxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACC,EAAE;EAEpBC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAEf,MAAMG,OAAO,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGJ,EAAE,CAAC;EAEjE,IAAI,CAACG,OAAO,CAACE,EAAE,EAAE;IACf,MAAM,IAAIC,KAAK,CAAC;MAAEC,OAAO,EAAE;IAA8C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC9F,CAAC,MAAM;IACL,OAAOL,OAAO;EAChB;AACF;AAAC,IAAAP,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}